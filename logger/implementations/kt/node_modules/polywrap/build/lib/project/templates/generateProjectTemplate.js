"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateProjectTemplate = void 0;
var __1 = require("../../");
var child_process_1 = require("child_process");
var fs_1 = __importDefault(require("fs"));
var fs_extra_1 = __importDefault(require("fs-extra"));
var dns_1 = __importDefault(require("dns"));
var url_1 = __importDefault(require("url"));
var chalk_1 = __importDefault(require("chalk"));
var path_1 = __importDefault(require("path"));
function shouldUseYarn() {
    try {
        (0, child_process_1.execSync)("yarnpkg --version", { stdio: "ignore" });
        return true;
    }
    catch (e) {
        return false;
    }
}
function getProxy() {
    if (process.env.https_proxy) {
        return process.env.https_proxy;
    }
    else {
        try {
            // Trying to read https-proxy from .npmrc
            var httpsProxy = (0, child_process_1.execSync)("npm config get https-proxy")
                .toString()
                .trim();
            return httpsProxy !== "null" ? httpsProxy : undefined;
        }
        catch (e) {
            return undefined;
        }
    }
}
function checkIfOnline(useYarn) {
    if (!useYarn) {
        // Don't ping the Yarn registry.
        // We'll just assume the best case.
        return Promise.resolve(true);
    }
    return new Promise(function (resolve) {
        dns_1.default.lookup("registry.yarnpkg.com", function (err) {
            var proxy;
            if (err != null && (proxy = getProxy())) {
                // If a proxy is defined, we likely can't resolve external hostnames.
                // Try to resolve the proxy name as an indication of a connection.
                dns_1.default.lookup(url_1.default.parse(proxy).hostname || "", function (proxyErr) {
                    resolve(proxyErr == null);
                });
            }
            else {
                resolve(err == null);
            }
        });
    });
}
var executeCommand = function (command, args, root) {
    return new Promise(function (resolve, reject) {
        var child = (0, child_process_1.spawn)(command, args, {
            stdio: "inherit",
            cwd: root,
            shell: process.platform == "win32",
        });
        child.on("close", function (code) {
            if (code !== 0) {
                // Return the failed command
                reject({
                    command: "".concat(command, " ").concat(args.join(" ")),
                });
                return;
            }
            resolve(true);
        });
    });
};
var generateProjectTemplate = function (type, lang, projectDir) { return __awaiter(void 0, void 0, void 0, function () {
    var command, args, useYarn, isOnline, root, packageNameOverride, dependencies, offlineMessage, fallbackMessage, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                useYarn = shouldUseYarn();
                isOnline = checkIfOnline(useYarn);
                root = path_1.default.resolve(projectDir);
                packageNameOverride = process.env.OVERRIDE_CREATE_TEMPLATES_NPM;
                dependencies = [packageNameOverride || "@polywrap/templates"];
                fs_1.default.writeFileSync(path_1.default.join(root, "package.json"), "\n{\n  \"name\": \"template\"\n}\n    ");
                if (useYarn) {
                    command = "yarnpkg";
                    args = ["add", "--exact"];
                    if (!isOnline) {
                        args.push("--offline");
                    }
                    args.push.apply(args, __spreadArray([], __read(dependencies), false));
                    // Explicitly set cwd() to work around issues like
                    // https://github.com/facebook/create-react-app/issues/3326.
                    // Unfortunately we can only do this for Yarn because npm support for
                    // equivalent --prefix flag doesn't help with this issue.
                    // This is why for npm, we run checkThatNpmCanReadCwd() early instead.
                    args.push("--cwd");
                    args.push(root);
                    if (!isOnline) {
                        offlineMessage = __1.intlMsg.lib_generators_projectGenerator_offline();
                        fallbackMessage = __1.intlMsg.lib_generators_projectGenerator_fallback();
                        console.log(chalk_1.default.yellow(offlineMessage));
                        console.log(chalk_1.default.yellow(fallbackMessage));
                        console.log();
                    }
                }
                else {
                    command = "npm";
                    args = ["install", "--save", "--save-exact", "--loglevel", "error"].concat(dependencies);
                }
                return [4 /*yield*/, executeCommand(command, args, root)];
            case 1:
                _a.sent();
                _a.label = 2;
            case 2:
                _a.trys.push([2, 4, , 5]);
                return [4 /*yield*/, fs_extra_1.default.copy("".concat(root, "/node_modules/@polywrap/templates/").concat(type, "/").concat(lang), "".concat(root), {
                        overwrite: true,
                    })];
            case 3:
                _a.sent();
                return [2 /*return*/, true];
            case 4:
                e_1 = _a.sent();
                throw {
                    command: "copy ".concat(root, "/node_modules/@polywrap/templates/").concat(type, "/").concat(lang, " ").concat(root),
                };
            case 5: return [2 /*return*/];
        }
    });
}); };
exports.generateProjectTemplate = generateProjectTemplate;
//# sourceMappingURL=generateProjectTemplate.js.map