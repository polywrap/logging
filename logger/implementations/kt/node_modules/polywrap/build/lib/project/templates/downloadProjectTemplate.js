"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadProjectTemplate = exports.parseUrlFormat = exports.UrlFormat = void 0;
var helpers_1 = require("../../helpers");
var system_1 = require("../../system");
var intl_1 = require("../../intl");
var CacheDirectory_1 = require("../../CacheDirectory");
var path_1 = __importDefault(require("path"));
var UrlFormat;
(function (UrlFormat) {
    UrlFormat["git"] = ".git";
})(UrlFormat = exports.UrlFormat || (exports.UrlFormat = {}));
function parseUrlFormat(url) {
    if (url.startsWith("http") && url.endsWith(".git")) {
        return UrlFormat.git;
    }
    else {
        var formats = Object.values(UrlFormat).join(", ");
        var message = intl_1.intlMsg.commands_create_error_badUrl({
            url: "'".concat(url, "'"),
            formats: formats,
        });
        throw Error(message);
    }
}
exports.parseUrlFormat = parseUrlFormat;
function downloadGitTemplate(url, projectDir, logger, cacheDir) {
    return __awaiter(this, void 0, void 0, function () {
        var command, args, repoName, dotGitSubPath, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    command = "git clone";
                    args = ["--depth", "1", "--single-branch", url];
                    repoName = path_1.default.basename(url, ".git");
                    dotGitSubPath = path_1.default.join(repoName, "/.git/");
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 4, 5, 6]);
                    // clone repo
                    return [4 /*yield*/, (0, system_1.runCommand)(command, args, logger, undefined, cacheDir.getCacheDir())];
                case 2:
                    // clone repo
                    _a.sent();
                    // remove .git data
                    cacheDir.removeCacheDir(dotGitSubPath);
                    // copy files from cache to project dir
                    return [4 /*yield*/, cacheDir.copyFromCache(repoName, projectDir)];
                case 3:
                    // copy files from cache to project dir
                    _a.sent();
                    return [3 /*break*/, 6];
                case 4:
                    e_1 = _a.sent();
                    // this is safe because removeCacheDir and copyFromCache should not throw
                    throw {
                        command: "git clone " + args.join(", "),
                    };
                case 5:
                    // clear cache
                    cacheDir.resetCache();
                    return [7 /*endfinally*/];
                case 6: return [2 /*return*/];
            }
        });
    });
}
var downloadProjectTemplate = function (url, projectDir, logger, urlFormat) { return __awaiter(void 0, void 0, void 0, function () {
    var cacheDir;
    return __generator(this, function (_a) {
        urlFormat = urlFormat !== null && urlFormat !== void 0 ? urlFormat : parseUrlFormat(url);
        cacheDir = new CacheDirectory_1.CacheDirectory({
            rootDir: CacheDirectory_1.globalCacheRoot,
            subDir: (0, helpers_1.createUUID)(),
        }, "templates").initCache();
        if (urlFormat === UrlFormat.git) {
            return [2 /*return*/, downloadGitTemplate(url, projectDir, logger, cacheDir)];
        }
        else {
            throw Error("This should never happen");
        }
        return [2 /*return*/];
    });
}); };
exports.downloadProjectTemplate = downloadProjectTemplate;
//# sourceMappingURL=downloadProjectTemplate.js.map