"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_js_1 = require("@polywrap/core-js");
var client_js_1 = require("@polywrap/client-js");
var Sys = __importStar(require("@polywrap/sys-config-bundle-js"));
var client_config_builder_js_1 = require("@polywrap/client-config-builder-js");
var fs_1 = __importDefault(require("fs"));
var isValidUri = function (uri) {
    return uri.authority === "fs" || uri.authority === "file";
};
var readDirContents = function (path, dirName) { return __awaiter(void 0, void 0, void 0, function () {
    var dirents, data, dirents_1, dirents_1_1, dirent, subDir, fileData, e_1_1;
    var e_1, _a;
    var _b, _c, _d, _e;
    return __generator(this, function (_f) {
        switch (_f.label) {
            case 0: return [4 /*yield*/, fs_1.default.promises.readdir(path, {
                    withFileTypes: true,
                })];
            case 1:
                dirents = _f.sent();
                data = { name: dirName };
                _f.label = 2;
            case 2:
                _f.trys.push([2, 9, 10, 11]);
                dirents_1 = __values(dirents), dirents_1_1 = dirents_1.next();
                _f.label = 3;
            case 3:
                if (!!dirents_1_1.done) return [3 /*break*/, 8];
                dirent = dirents_1_1.value;
                if (!dirent.isDirectory()) return [3 /*break*/, 5];
                return [4 /*yield*/, readDirContents("".concat(path, "/").concat(dirent.name), "".concat(dirName, "/").concat(dirent.name))];
            case 4:
                subDir = _f.sent();
                data.directories = (_b = data.directories) !== null && _b !== void 0 ? _b : [];
                (_c = data.directories) === null || _c === void 0 ? void 0 : _c.push(subDir);
                return [3 /*break*/, 7];
            case 5: return [4 /*yield*/, fs_1.default.promises.readFile("".concat(path, "/").concat(dirent.name))];
            case 6:
                fileData = _f.sent();
                data.files = (_d = data.files) !== null && _d !== void 0 ? _d : [];
                (_e = data.files) === null || _e === void 0 ? void 0 : _e.push({
                    name: dirent.name,
                    data: fileData,
                });
                _f.label = 7;
            case 7:
                dirents_1_1 = dirents_1.next();
                return [3 /*break*/, 3];
            case 8: return [3 /*break*/, 11];
            case 9:
                e_1_1 = _f.sent();
                e_1 = { error: e_1_1 };
                return [3 /*break*/, 11];
            case 10:
                try {
                    if (dirents_1_1 && !dirents_1_1.done && (_a = dirents_1.return)) _a.call(dirents_1);
                }
                finally { if (e_1) throw e_1.error; }
                return [7 /*endfinally*/];
            case 11: return [2 /*return*/, data];
        }
    });
}); };
var IPFSDeployer = /** @class */ (function () {
    function IPFSDeployer() {
    }
    IPFSDeployer.prototype.execute = function (uri, config) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var path, data, ipfsProvider, args, clientConfig, client, result, rootCID, _b, _c, addResult;
            var e_2, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        if (!isValidUri(uri)) {
                            throw new Error("IPFS Deployer error: Invalid URI: ".concat(uri.toString(), ". Supplied URI needs to be a Filesystem URI, example: fs/./build"));
                        }
                        path = uri.path;
                        return [4 /*yield*/, readDirContents(path, "")];
                    case 1:
                        data = _e.sent();
                        ipfsProvider = (_a = config === null || config === void 0 ? void 0 : config.gatewayUri) !== null && _a !== void 0 ? _a : "http://localhost:5001";
                        args = {
                            data: data,
                            ipfsProvider: ipfsProvider,
                            addOptions: {
                                pin: true,
                                wrapWithDirectory: false,
                            },
                            timeout: 10000,
                        };
                        clientConfig = new client_config_builder_js_1.PolywrapClientConfigBuilder()
                            .addDefaults()
                            .build();
                        client = new client_js_1.PolywrapClient(clientConfig);
                        return [4 /*yield*/, client.invoke({
                                uri: Sys.bundle.ipfsHttpClient.uri,
                                method: "addDir",
                                args: args,
                            })];
                    case 2:
                        result = _e.sent();
                        if (!result.ok)
                            throw result.error;
                        rootCID = "";
                        try {
                            for (_b = __values(result.value), _c = _b.next(); !_c.done; _c = _b.next()) {
                                addResult = _c.value;
                                if (addResult.name.indexOf("/") === -1) {
                                    rootCID = addResult.hash;
                                }
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (_c && !_c.done && (_d = _b.return)) _d.call(_b);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                        return [2 /*return*/, new core_js_1.Uri("ipfs/".concat(rootCID))];
                }
            });
        });
    };
    return IPFSDeployer;
}());
exports.default = new IPFSDeployer();
//# sourceMappingURL=index.js.map