/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import fs from "fs";
import copyfiles from "copyfiles";
export declare const globalCacheRoot: string;
export interface CacheDirectoryConfig {
    rootDir: string;
    subDir: string;
}
export declare class CacheDirectory {
    protected _config: CacheDirectoryConfig;
    protected _cacheDirName: string;
    constructor(_config: CacheDirectoryConfig, _cacheDirName?: string);
    getCacheDir(): string;
    initCache(): this;
    resetCache(): void;
    removeCacheDir(dir: string): void;
    getCachePath(subpath: string): string;
    readCacheFile(file: string): string | undefined;
    writeCacheFile(subPath: string, data: string | NodeJS.ArrayBufferView, options?: fs.WriteFileOptions): void;
    appendToCacheFile(subPath: string, data: string | Buffer, options?: fs.WriteFileOptions): void;
    copyIntoCache(destSubDir: string, sourceDir: string, options?: copyfiles.Options): Promise<void>;
    copyFromCache(sourceSubDir: string, destDir: string): Promise<void>;
}
