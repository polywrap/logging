import { Command, BaseCommandOptions } from "./types";
import { Logger } from "../lib";
declare const manifestTypes: readonly ["project", "build", "deploy", "infra", "workflow", "docs"];
export type ManifestType = typeof manifestTypes[number];
export interface ManifestSchemaCommandOptions extends BaseCommandOptions {
    raw: boolean;
    manifestFile: string | false;
}
export interface ManifestMigrateCommandOptions extends BaseCommandOptions {
    manifestFile: string | false;
    format: string | false;
}
export declare const manifest: Command;
export declare const runSchemaCommand: (type: ManifestType, options: Required<ManifestSchemaCommandOptions>) => Promise<void>;
export declare const getSchemaString: (logger: Logger, type: ManifestType, options: Required<ManifestSchemaCommandOptions>) => Promise<string>;
export {};
