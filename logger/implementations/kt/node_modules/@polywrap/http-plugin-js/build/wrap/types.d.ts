import * as Types from "./";
export type UInt = number;
export type UInt8 = number;
export type UInt16 = number;
export type UInt32 = number;
export type Int = number;
export type Int8 = number;
export type Int16 = number;
export type Int32 = number;
export type Bytes = Uint8Array;
export type BigInt = string;
export type BigNumber = string;
export type Json = string;
export type String = string;
export type Boolean = boolean;
export interface Response {
    status: Types.Int;
    statusText: Types.String;
    headers?: Map<Types.String, Types.String> | null;
    body?: Types.String | null;
}
export interface Request {
    headers?: Map<Types.String, Types.String> | null;
    urlParams?: Map<Types.String, Types.String> | null;
    responseType: Types.ResponseType;
    body?: Types.String | null;
    formData?: Array<Types.FormDataEntry> | null;
    timeout?: Types.UInt32 | null;
}
export interface FormDataEntry {
    name: Types.String;
    value?: Types.String | null;
    fileName?: Types.String | null;
    type?: Types.String | null;
}
export declare enum ResponseTypeEnum {
    TEXT = 0,
    BINARY = 1
}
export type ResponseTypeString = "TEXT" | "BINARY";
export type ResponseType = ResponseTypeEnum | ResponseTypeString;
