import { CoreClient } from "@polywrap/core-js";
import { PluginFactory } from "@polywrap/plugin-js";
import { Args_abort, Args_result, Args_schedule, Args_status, Int, TaskResult, TaskStatus, Module } from "./wrap";
type NoConfig = Record<string, never>;
export declare class ConcurrentPromisePlugin extends Module<NoConfig> {
    private _totalTasks;
    private _tasks;
    private _status;
    result(input: Args_result, client: CoreClient): Promise<Array<TaskResult>>;
    status(input: Args_status, client: CoreClient): Promise<Array<TaskStatus>>;
    schedule(input: Args_schedule, client: CoreClient): Array<Int>;
    abort(args: Args_abort, client: CoreClient): Array<boolean>;
    private scheduleTask;
    private resolveTask;
}
export declare const concurrentPromisePlugin: PluginFactory<NoConfig>;
export declare const plugin: PluginFactory<NoConfig>;
export {};
