"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.migrate = void 0;
function migrate(manifest, logger) {
    var _a = __read(sanitizeJobsSteps(manifest.jobs), 2), jobsSanitized = _a[0], jobsHaveStepsWithConfig = _a[1];
    if (jobsHaveStepsWithConfig) {
        logger === null || logger === void 0 ? void 0 : logger.warn("One or more of the steps in your test manifest have a config property. This is no longer supported, and will be removed.");
    }
    return {
        format: "0.2.0",
        name: manifest.name,
        jobs: jobsSanitized,
        validation: manifest.validation,
        // eslint-disable-next-line @typescript-eslint/naming-convention
        __type: "PolywrapWorkflow",
    };
}
exports.migrate = migrate;
function sanitizeJobsSteps(jobs) {
    var _a;
    if (jobs === undefined) {
        return [undefined, false];
    }
    var oldJobs = JSON.parse(JSON.stringify(jobs));
    var newJobs = {};
    var jobHasStepsWithConfig = false;
    for (var job in oldJobs) {
        var jobInfo = oldJobs[job];
        if (jobInfo.steps) {
            newJobs[job] = {};
            newJobs[job].steps = jobInfo.steps.map(function (x) {
                if (x.config) {
                    jobHasStepsWithConfig = true;
                }
                return {
                    method: x.method,
                    uri: x.uri,
                    args: x.args,
                };
            });
        }
        var innerJobsHaveStepsWithConfig = false;
        _a = __read(sanitizeJobsSteps(jobInfo.jobs), 2), newJobs[job].jobs = _a[0], innerJobsHaveStepsWithConfig = _a[1];
        jobHasStepsWithConfig =
            jobHasStepsWithConfig || innerJobsHaveStepsWithConfig;
    }
    return [newJobs, jobHasStepsWithConfig];
}
//# sourceMappingURL=0.1.0_to_0.2.0.js.map