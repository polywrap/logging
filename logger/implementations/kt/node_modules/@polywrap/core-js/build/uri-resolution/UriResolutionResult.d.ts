import { Uri, IWrapPackage, Wrapper } from "../types";
import { IUriResolutionStep } from "./IUriResolutionStep";
import { UriPackageOrWrapper } from "./UriPackageOrWrapper";
import { Result } from "@polywrap/result";
/** Factory for creating Result from URI resolution output */
export declare class UriResolutionResult<TError = undefined> {
    result: Result<UriPackageOrWrapper, TError>;
    history?: IUriResolutionStep<unknown>[];
    /** Returns a Result with `ok` set to true */
    static ok<TError = undefined>(uri: Uri): Result<UriPackageOrWrapper, TError>;
    static ok<TError = undefined>(uri: Uri, wrapPackage: IWrapPackage): Result<UriPackageOrWrapper, TError>;
    static ok<TError = undefined>(uri: Uri, wrapper: Wrapper): Result<UriPackageOrWrapper, TError>;
    static ok<TError = undefined>(uriPackageOrWrapper: UriPackageOrWrapper): Result<UriPackageOrWrapper, TError>;
    /** Returns a Result with `ok` set to false */
    static err<TError = unknown>(error: TError): Result<UriPackageOrWrapper, TError>;
}
