import { IUriResolutionStep } from "./IUriResolutionStep";
import { IUriResolutionContext } from "./IUriResolutionContext";
import { Uri } from "../types";
/** An implementation of the IUriResolutionContext interface */
export declare class UriResolutionContext implements IUriResolutionContext {
    private _resolvingUriMap;
    private _resolutionPath;
    private _history;
    /** Construct a UriResolutionContext */
    constructor();
    constructor(resolvingUriMap: Map<string, boolean>, resolutionPath: Set<string>);
    constructor(resolvingUriMap: Map<string, boolean>, history: IUriResolutionStep<unknown>[]);
    isResolving(uri: Uri): boolean;
    startResolving(uri: Uri): void;
    stopResolving(uri: Uri): void;
    trackStep<TError>(step: IUriResolutionStep<TError>): void;
    getHistory(): IUriResolutionStep<unknown>[];
    getResolutionPath(): Uri[];
    createSubHistoryContext(): IUriResolutionContext;
    createSubContext(): IUriResolutionContext;
}
