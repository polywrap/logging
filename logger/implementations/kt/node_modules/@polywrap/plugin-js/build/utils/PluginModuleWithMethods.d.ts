import { PluginMethod } from "../PluginMethod";
import { PluginModule } from "../PluginModule";
import { GetPluginMethodsFunc } from "./GetPluginMethodsFunc";
import { CoreClient } from "@polywrap/core-js";
import { Result } from "@polywrap/result";
export declare class PluginModuleWithMethods<TEnv extends Record<string, unknown> = Record<string, unknown>> extends PluginModule<never, TEnv> {
    private _getPluginMethods;
    constructor(_getPluginMethods: GetPluginMethodsFunc<TEnv>);
    _wrap_invoke<TArgs extends Record<string, unknown> = Record<string, unknown>, TResult = unknown>(method: string, args: TArgs, client: CoreClient, env: TEnv): Promise<Result<TResult, Error>>;
    getMethod<TArgs extends Record<string, unknown> = Record<string, unknown>, TResult = unknown>(method: string): PluginMethod<TArgs, TResult> | undefined;
}
