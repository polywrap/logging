import { PluginMethod } from "./PluginMethod";
import { CoreClient } from "@polywrap/core-js";
import { Result } from "@polywrap/result";
export declare abstract class PluginModule<TConfig, TEnv extends Record<string, unknown> = Record<string, unknown>> {
    private _config;
    constructor(config: TConfig);
    get config(): TConfig;
    _wrap_invoke<TArgs extends Record<string, unknown> = Record<string, unknown>, TResult = unknown>(method: string, args: TArgs, client: CoreClient, env: TEnv): Promise<Result<TResult, Error>>;
    getMethod<TArgs extends Record<string, unknown> = Record<string, unknown>, TResult = unknown, TEnv extends Record<string, unknown> = Record<string, unknown>>(method: string): PluginMethod<TArgs, TResult> | undefined;
}
