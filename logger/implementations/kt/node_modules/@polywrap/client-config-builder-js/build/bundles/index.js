"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addBundle = exports.getBundle = exports.Web3 = exports.Sys = void 0;
var sys_1 = require("./sys");
Object.defineProperty(exports, "Sys", { enumerable: true, get: function () { return sys_1.Sys; } });
var web3_1 = require("./web3");
Object.defineProperty(exports, "Web3", { enumerable: true, get: function () { return web3_1.Web3; } });
/* $ */
function getBundle(name) {
    switch (name) {
        case "sys":
            return sys_1.Sys.bundle;
        case "web3":
            return web3_1.Web3.bundle;
        default:
            throw Error("Unknown bundle name \"".concat(name, "\"."));
    }
}
exports.getBundle = getBundle;
function addBundle(name, builder) {
    var e_1, _a, e_2, _b, e_3, _c;
    var bundle = getBundle(name);
    try {
        for (var _d = __values(Object.values(bundle)), _e = _d.next(); !_e.done; _e = _d.next()) {
            var bundlePackage = _e.value;
            // Add package
            if (bundlePackage.package) {
                builder.setPackage(bundlePackage.uri, bundlePackage.package);
            }
            // Add interface implementations
            if (bundlePackage.implements) {
                try {
                    for (var _f = (e_2 = void 0, __values(bundlePackage.implements)), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var interfaceUri = _g.value;
                        builder.addInterfaceImplementation(interfaceUri, bundlePackage.uri);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            // Add all redirects
            if (bundlePackage.redirectFrom) {
                try {
                    for (var _h = (e_3 = void 0, __values(bundlePackage.redirectFrom)), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var redirectFrom = _j.value;
                        builder.setRedirect(redirectFrom, bundlePackage.uri);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            // Add environment
            if (bundlePackage.env) {
                builder.addEnv(bundlePackage.uri, bundlePackage.env);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return builder;
}
exports.addBundle = addBundle;
//# sourceMappingURL=index.js.map