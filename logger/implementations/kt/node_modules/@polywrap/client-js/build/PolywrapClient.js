"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolywrapClient = void 0;
var core_client_js_1 = require("@polywrap/core-client-js");
var core_js_1 = require("@polywrap/core-js");
var result_1 = require("@polywrap/result");
var wrap_manifest_types_js_1 = require("@polywrap/wrap-manifest-types-js");
var tracing_js_1 = require("@polywrap/tracing-js");
var client_config_builder_js_1 = require("@polywrap/client-config-builder-js");
var PolywrapClient = /** @class */ (function (_super) {
    __extends(PolywrapClient, _super);
    // $start: PolywrapClient-constructor
    /**
     * Instantiate a PolywrapClient
     *
     * @param config - a client configuration
     */
    function PolywrapClient(config) {
        return _super.call(this, config !== null && config !== void 0 ? config : new client_config_builder_js_1.PolywrapClientConfigBuilder().addDefaults().build()) || this;
    }
    /**
     * Enable tracing for intricate debugging
     *
     * @remarks
     * Tracing uses the @polywrap/tracing-js package
     *
     * @param tracerConfig - configure options such as the tracing level
     * @returns void
     */
    PolywrapClient.prototype.setTracingEnabled = function (tracerConfig) {
        if ((tracerConfig === null || tracerConfig === void 0 ? void 0 : tracerConfig.consoleEnabled) || (tracerConfig === null || tracerConfig === void 0 ? void 0 : tracerConfig.httpEnabled)) {
            tracing_js_1.Tracer.enableTracing("PolywrapClient", tracerConfig);
        }
        else {
            tracing_js_1.Tracer.disableTracing();
        }
    };
    PolywrapClient.prototype.getConfig = function () {
        return _super.prototype.getConfig.call(this);
    };
    PolywrapClient.prototype.getInterfaces = function () {
        return _super.prototype.getInterfaces.call(this);
    };
    PolywrapClient.prototype.getEnvs = function () {
        return _super.prototype.getEnvs.call(this);
    };
    PolywrapClient.prototype.getResolver = function () {
        return _super.prototype.getResolver.call(this);
    };
    PolywrapClient.prototype.getEnvByUri = function (uri) {
        return _super.prototype.getEnvByUri.call(this, core_js_1.Uri.from(uri));
    };
    PolywrapClient.prototype.getManifest = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.getManifest.call(this, core_js_1.Uri.from(uri))];
            });
        });
    };
    PolywrapClient.prototype.getFile = function (uri, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.getFile.call(this, core_js_1.Uri.from(uri), options)];
            });
        });
    };
    PolywrapClient.prototype.getImplementations = function (uri, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.getImplementations.call(this, core_js_1.Uri.from(uri), options)];
            });
        });
    };
    PolywrapClient.prototype.invokeWrapper = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.invokeWrapper.call(this, __assign(__assign({}, options), { uri: core_js_1.Uri.from(options.uri) }))];
            });
        });
    };
    PolywrapClient.prototype.invoke = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.invoke.call(this, __assign(__assign({}, options), { uri: core_js_1.Uri.from(options.uri) }))];
            });
        });
    };
    PolywrapClient.prototype.tryResolveUri = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _super.prototype.tryResolveUri.call(this, __assign(__assign({}, options), { uri: core_js_1.Uri.from(options.uri) }))];
            });
        });
    };
    PolywrapClient.prototype.loadWrapper = function (uri, resolutionContext, options) {
        return _super.prototype.loadWrapper.call(this, core_js_1.Uri.from(uri), resolutionContext, options);
    };
    // $start: PolywrapCoreClient-validate
    /**
     * Validate a wrapper, given a URI.
     * Optionally, validate the full ABI and/or recursively validate imports.
     *
     * @param uri - the Uri to resolve
     * @param options - { abi?: boolean; recursive?: boolean }
     * @returns A Promise with a Result containing a boolean or Error
     */
    PolywrapClient.prototype.validate = function (uri, options) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var wrapper, abi, importedModules, importUri, resolvedModules, modulesNotFound, missingModules, error, _loop_1, this_1, importedModules_1, importedModules_1_1, importedModule, state_1, e_1_1, validateImportedModules, resolverUris, invalidUris, missingUris, error;
            var e_1, _c;
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4 /*yield*/, this.loadWrapper(core_js_1.Uri.from(uri))];
                    case 1:
                        wrapper = _d.sent();
                        if (!wrapper.ok) {
                            return [2 /*return*/, (0, result_1.ResultErr)(new Error((_a = wrapper.error) === null || _a === void 0 ? void 0 : _a.message))];
                        }
                        return [4 /*yield*/, wrapper.value.getManifest()];
                    case 2:
                        abi = (_d.sent()).abi;
                        importedModules = abi.importedModuleTypes || [];
                        importUri = function (importedModuleType) {
                            return _this.tryResolveUri({ uri: importedModuleType.uri });
                        };
                        return [4 /*yield*/, Promise.all(importedModules.map(importUri))];
                    case 3:
                        resolvedModules = _d.sent();
                        modulesNotFound = resolvedModules.filter(function (_a) {
                            var ok = _a.ok;
                            return !ok;
                        });
                        if (modulesNotFound.length) {
                            missingModules = modulesNotFound.map(function (_a) {
                                var error = _a.error;
                                var uriIndex = error === null || error === void 0 ? void 0 : error.message.indexOf("\n");
                                return error === null || error === void 0 ? void 0 : error.message.substring(0, uriIndex);
                            });
                            error = new Error(JSON.stringify(missingModules));
                            return [2 /*return*/, (0, result_1.ResultErr)(error)];
                        }
                        if (!options.abi) return [3 /*break*/, 11];
                        _loop_1 = function (importedModule) {
                            var importedModuleManifest, importedMethods, expectedMethods, errorMessage, _e, _f, _g, i, _1, importedMethod, expectedMethod, areEqual;
                            var e_2, _h;
                            return __generator(this, function (_j) {
                                switch (_j.label) {
                                    case 0: return [4 /*yield*/, this_1.getManifest(importedModule.uri)];
                                    case 1:
                                        importedModuleManifest = _j.sent();
                                        if (!importedModuleManifest.ok) {
                                            return [2 /*return*/, { value: (0, result_1.ResultErr)(importedModuleManifest.error) }];
                                        }
                                        importedMethods = ((_b = importedModuleManifest.value.abi.moduleType) === null || _b === void 0 ? void 0 : _b.methods) || [];
                                        expectedMethods = importedModules.find(function (_a) {
                                            var uri = _a.uri;
                                            return importedModule.uri === uri;
                                        });
                                        errorMessage = "ABI from Uri: ".concat(importedModule.uri, " is not compatible with Uri: ").concat(uri);
                                        try {
                                            for (_e = (e_2 = void 0, __values(Object.keys(importedMethods).entries())), _f = _e.next(); !_f.done; _f = _e.next()) {
                                                _g = __read(_f.value, 2), i = _g[0], _1 = _g[1];
                                                importedMethod = importedMethods[i];
                                                if ((expectedMethods === null || expectedMethods === void 0 ? void 0 : expectedMethods.methods) && (expectedMethods === null || expectedMethods === void 0 ? void 0 : expectedMethods.methods.length) < i) {
                                                    expectedMethod = expectedMethods === null || expectedMethods === void 0 ? void 0 : expectedMethods.methods[i];
                                                    areEqual = (0, wrap_manifest_types_js_1.compareSignature)(importedMethod, expectedMethod);
                                                    if (!areEqual)
                                                        return [2 /*return*/, { value: (0, result_1.ResultErr)(new Error(errorMessage)) }];
                                                }
                                                else {
                                                    return [2 /*return*/, { value: (0, result_1.ResultErr)(new Error(errorMessage)) }];
                                                }
                                            }
                                        }
                                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                                        finally {
                                            try {
                                                if (_f && !_f.done && (_h = _e.return)) _h.call(_e);
                                            }
                                            finally { if (e_2) throw e_2.error; }
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        };
                        this_1 = this;
                        _d.label = 4;
                    case 4:
                        _d.trys.push([4, 9, 10, 11]);
                        importedModules_1 = __values(importedModules), importedModules_1_1 = importedModules_1.next();
                        _d.label = 5;
                    case 5:
                        if (!!importedModules_1_1.done) return [3 /*break*/, 8];
                        importedModule = importedModules_1_1.value;
                        return [5 /*yield**/, _loop_1(importedModule)];
                    case 6:
                        state_1 = _d.sent();
                        if (typeof state_1 === "object")
                            return [2 /*return*/, state_1.value];
                        _d.label = 7;
                    case 7:
                        importedModules_1_1 = importedModules_1.next();
                        return [3 /*break*/, 5];
                    case 8: return [3 /*break*/, 11];
                    case 9:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 11];
                    case 10:
                        try {
                            if (importedModules_1_1 && !importedModules_1_1.done && (_c = importedModules_1.return)) _c.call(importedModules_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 11:
                        if (!options.recursive) return [3 /*break*/, 13];
                        validateImportedModules = importedModules.map(function (_a) {
                            var uri = _a.uri;
                            return _this.validate(uri, options);
                        });
                        return [4 /*yield*/, Promise.all(validateImportedModules)];
                    case 12:
                        resolverUris = _d.sent();
                        invalidUris = resolverUris.filter(function (_a) {
                            var ok = _a.ok;
                            return !ok;
                        });
                        if (invalidUris.length) {
                            missingUris = invalidUris.map(function (_a) {
                                var error = _a.error;
                                var uriIndex = error === null || error === void 0 ? void 0 : error.message.indexOf("\n");
                                return error === null || error === void 0 ? void 0 : error.message.substring(0, uriIndex);
                            });
                            error = new Error(JSON.stringify(missingUris));
                            return [2 /*return*/, (0, result_1.ResultErr)(error)];
                        }
                        _d.label = 13;
                    case 13: return [2 /*return*/, (0, result_1.ResultOk)(true)];
                }
            });
        });
    };
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getConfig")
    ], PolywrapClient.prototype, "getConfig", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getInterfaces")
    ], PolywrapClient.prototype, "getInterfaces", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getEnvs")
    ], PolywrapClient.prototype, "getEnvs", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getResolver")
    ], PolywrapClient.prototype, "getResolver", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getEnvByUri")
    ], PolywrapClient.prototype, "getEnvByUri", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getManifest")
    ], PolywrapClient.prototype, "getManifest", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getFile")
    ], PolywrapClient.prototype, "getFile", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: getImplementations")
    ], PolywrapClient.prototype, "getImplementations", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: invokeWrapper")
    ], PolywrapClient.prototype, "invokeWrapper", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: invoke")
    ], PolywrapClient.prototype, "invoke", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: tryResolveUri")
    ], PolywrapClient.prototype, "tryResolveUri", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: loadWrapper")
    ], PolywrapClient.prototype, "loadWrapper", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PolywrapClient: validateConfig")
    ], PolywrapClient.prototype, "validate", null);
    return PolywrapClient;
}(core_client_js_1.PolywrapCoreClient));
exports.PolywrapClient = PolywrapClient;
//# sourceMappingURL=PolywrapClient.js.map