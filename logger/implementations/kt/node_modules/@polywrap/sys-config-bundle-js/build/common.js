"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bundle = exports.ipfsProviders = void 0;
var uri_resolver_extensions_js_1 = require("@polywrap/uri-resolver-extensions-js");
// $start: bundle
var logger_plugin_js_1 = require("@polywrap/logger-plugin-js");
var datetime_plugin_js_1 = require("@polywrap/datetime-plugin-js");
var concurrent_plugin_js_1 = require("@polywrap/concurrent-plugin-js");
var http_plugin_js_1 = require("@polywrap/http-plugin-js");
var httpResolver = __importStar(require("./embeds/http-resolver/wrap"));
var ipfsHttpClient = __importStar(require("./embeds/ipfs-http-client/wrap"));
var ipfsResolver = __importStar(require("./embeds/async-ipfs-resolver/wrap"));
exports.ipfsProviders = [
    "https://ipfs.wrappers.io",
    "https://ipfs.io",
];
exports.bundle = {
    logger: {
        uri: "plugin/logger@1.0.0",
        package: (0, logger_plugin_js_1.loggerPlugin)({}),
        implements: ["wrapscan.io/polywrap/logger@1.0"],
        redirectFrom: ["wrapscan.io/polywrap/logger@1.0"],
    },
    datetime: {
        uri: "plugin/datetime@1.0.0",
        package: (0, datetime_plugin_js_1.dateTimePlugin)({}),
        implements: ["wrapscan.io/polywrap/datetime@1.0"],
        redirectFrom: ["wrapscan.io/polywrap/datetime@1.0"],
    },
    concurrent: {
        uri: "plugin/concurrent@1.0.0",
        package: (0, concurrent_plugin_js_1.concurrentPromisePlugin)({}),
        implements: ["wrapscan.io/polywrap/concurrent@1.0"],
        redirectFrom: ["wrapscan.io/polywrap/concurrent@1.0"],
    },
    http: {
        uri: "plugin/http@1.1.0",
        package: (0, http_plugin_js_1.httpPlugin)({}),
        implements: ["wrapscan.io/polywrap/http@1.0"],
        redirectFrom: ["wrapscan.io/polywrap/http@1.0"],
    },
    githubResolver: {
        uri: "wrapscan.io/polywrap/github-uri-resolver@1.0",
        implements: [uri_resolver_extensions_js_1.ExtendableUriResolver.defaultExtInterfaceUris[0].uri],
    },
    httpResolver: {
        uri: "embed/http-uri-resolver@1.0.0",
        package: httpResolver.wasmPackage,
        implements: [
            "wrapscan.io/polywrap/http-uri-resolver@1.0",
            uri_resolver_extensions_js_1.ExtendableUriResolver.defaultExtInterfaceUris[0].uri
        ],
        redirectFrom: ["wrapscan.io/polywrap/http-uri-resolver@1.0"],
    },
    wrapscanResolver: {
        uri: "https://wraps.wrapscan.io/r/polywrap/wrapscan-uri-resolver@1.0",
        implements: [
            "wrapscan.io/polywrap/wrapscan-uri-resolver@1.0",
            uri_resolver_extensions_js_1.ExtendableUriResolver.defaultExtInterfaceUris[0].uri,
        ],
        redirectFrom: ["wrapscan.io/polywrap/wrapscan-uri-resolver@1.0"],
    },
    ipfsHttpClient: {
        uri: "embed/ipfs-http-client@1.0.0",
        package: ipfsHttpClient.wasmPackage,
        implements: ["wrapscan.io/polywrap/ipfs-http-client@1.0"],
        redirectFrom: ["wrapscan.io/polywrap/ipfs-http-client@1.0"],
    },
    ipfsResolver: {
        uri: "embed/async-ipfs-uri-resolver@1.0.0",
        package: ipfsResolver.wasmPackage,
        implements: [
            "wrapscan.io/polywrap/async-ipfs-uri-resolver@1.0",
            uri_resolver_extensions_js_1.ExtendableUriResolver.defaultExtInterfaceUris[0].uri,
        ],
        redirectFrom: ["wrapscan.io/polywrap/async-ipfs-uri-resolver@1.0"],
        env: {
            provider: exports.ipfsProviders[0],
            fallbackProviders: exports.ipfsProviders.slice(1),
            retries: { tryResolveUri: 2, getFile: 2 },
        },
    },
};
// $end
//# sourceMappingURL=common.js.map