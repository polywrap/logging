import { ResolverWithHistory } from "../helpers";
import { Uri, IWrapPackage, UriPackageOrWrapper } from "@polywrap/core-js";
import { Result } from "@polywrap/result";
/**
 * A Uri Resolver that resolves to an embedded wrap package and correctly updates
 * the resolution history.
 * */
export declare class PackageResolver extends ResolverWithHistory {
    private _uri;
    private wrapPackage;
    /**
     * Construct a PackageResolver
     *
     * @param _uri - the URI to redirect to the wrap package
     * @param wrapPackage - a wrap package
     * */
    constructor(_uri: Uri, wrapPackage: IWrapPackage);
    /**
     * A utility function for generating step descriptions to facilitate resolution context updates
     *
     * @returns text describing the URI resolution step
     * */
    protected getStepDescription: () => string;
    /**
     * Resolve a URI to a wrap package
     *
     * @param uri - the URI to resolve
     * @returns A Promise with a Result containing a wrap package if successful
     */
    protected _tryResolveUri(uri: Uri): Promise<Result<UriPackageOrWrapper>>;
}
