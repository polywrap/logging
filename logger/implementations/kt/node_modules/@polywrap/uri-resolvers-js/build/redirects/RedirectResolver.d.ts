import { ResolverWithHistory } from "../helpers";
import { Uri, UriPackageOrWrapper } from "@polywrap/core-js";
import { Result } from "@polywrap/result";
/**
 * A Uri Resolver that resolves to a new URI and correctly updates the
 * resolution history.
 * */
export declare class RedirectResolver<TUri extends string | Uri = string> extends ResolverWithHistory {
    from: Uri;
    to: Uri;
    /**
     * Construct a RedirectResolver
     *
     * @param from - the URI to redirect from
     * @param to - the URI to redirect to
     * */
    constructor(from: TUri, to: TUri);
    /**
     * A utility function for generating step descriptions to facilitate resolution context updates
     *
     * @returns text describing the URI resolution step
     * */
    protected getStepDescription: () => string;
    /**
     * Resolve a URI to a new URI
     *
     * @param uri - the URI to resolve
     * @returns A Promise with a Result containing a URI if successful
     */
    protected _tryResolveUri(uri: Uri): Promise<Result<UriPackageOrWrapper>>;
}
